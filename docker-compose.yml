version: "3.7"
services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$POSTGRES_DB", "-u", "$POSTGRES_USER"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 40s  

  graphql-engine:
    image: hasura/graphql-engine:latest
    #network_mode: "host" # Uncomment this on Linux!
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres # Mac, Win
      #HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres # Linux
      HASURA_GRAPHQL_AUTH_HOOK: "http://logger-roger:3000/hasura-auth" # Mac, Win
      #HASURA_GRAPHQL_AUTH_HOOK: "http://localhost:3000/hasura-auth" # Linux
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # Use `hasura console` instead, otherwise migrations won't work.
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup,webhook-log,http-log"
      HASURA_GRAPHQL_MIGRATIONS_SERVER_TIMEOUT: 60
      HASURA_GRAPHQL_ADMIN_SECRET: "hunter1"
      HASURA_GRAPHQL_MIGRATIONS_DIR: ./hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: ./hasura/metadata

  logger-roger:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - graphql-engine
    environment:
      SESSION_SECRET: "2af749a7d5d18de7b0c412ac2d349fd4"
      HASURA_URL: "http://graphql-engine:8080/v1/graphql" # server-side this hits internal IP, could use http://host.docker.internal:8081/v1/graphql as well
      HASURA_WS_URL: "ws://localhost:8081/v1/graphql" # client-side
      HASURA_ADMIN_SECRET: "hunter1"
      PORT: 3000
      LOGGERATOR_URL: "http://host.docker.internal:8080"